name: Actions ðŸ˜Ž

on:
  pull_request: {}
  push: 
    branches: 
      - master
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  build:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        unityVersion:
          - 2019.3.14f1
        targetPlatform:
          - StandaloneWindows64
          - StandaloneOSX
          - iOS 
    steps:
    
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
    
      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-
            Library-

      # Test
      - name: Run tests
        uses: webbertakken/unity-test-runner@v1.6
        id: testRunner
        with:
          unityVersion: ${{ matrix.unityVersion }}
      - uses: actions/upload-artifact@v1
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
      - run: sudo rm -rf ${{ steps.testRunner.outputs.artifactsPath }}

      # Build
      - name: Build project
        uses: webbertakken/unity-builder@v1.0
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic

      # Output 
      - uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.targetPlatform }}
          path: build
